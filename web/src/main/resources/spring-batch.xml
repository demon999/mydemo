<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:task="http://www.springframework.org/schema/task" xmlns:batch="http://www.springframework.org/schema/batch"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<!-- job context start -->
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	<bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	<!-- job context end -->

	<bean id="report" class="com.snow.batch.Report" scope="prototype" />
	<batch:job id="reportJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="customReader" writer="customWriter" commit-interval="10">
					<batch:listeners>
						<batch:listener ref="customStepListener" />
						<batch:listener ref="customItemReaderListener" />
						<batch:listener ref="customItemWriterListener" />
					</batch:listeners>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	<bean id="customStepListener" class="com.snow.batch.listener.CustomStepListener" />
	<bean id="customItemReaderListener" class="com.snow.batch.listener.CustomItemReaderListener" />
	<bean id="customItemWriterListener" class="com.snow.batch.listener.CustomItemWriterListener" />
	<bean id="customWriter" class="com.snow.batch.CustomWriter" />
	<bean id="customReader" class="com.snow.batch.CustomReader" />
	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<!-- Read a csv file -->
		<!--<property name="resource" value="classpath:cvs/input/report.csv" />-->
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,impressions" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="report" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="runScheduler" class="com.snow.batch.RunScheduler" />
	<task:scheduled-tasks>
		<task:scheduled ref="runScheduler" method="run" cron="0/10 * * * * *" />
	</task:scheduled-tasks>

	<!-- Quartz Schedule -->
	<!--<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
				<property name="jobDetail" ref="jobDetail" />
				<property name="cronExpression" value="*/10 * * * * ?" />
			</bean>
		</property>
	</bean>
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.mkyong.quartz.JobLauncherDetails" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="reportJob" />
				<entry key="jobLocator" value-ref="jobRegistry" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
				<entry key="param1" value="mkyong1" />
				<entry key="param2" value="mkyong2" />
			</map>
		</property>
	</bean>-->

</beans>